---
layout:   post
title:    "笔试坑"
subtitle: "在路上，，，"
date:     2017-07-27
author:   "NL"
header-img: "img/post-bg-2015.jpg"
tags:
    - offer
---

1. 与Mysql服务器相互作用的通讯协议包括TCP/IP，Socket，共享内存，命名管道

2. 增加一个管理员账户：ueradd -u 0 -o admin

   > 1. u表示创建用户.g表示创建用户组 -e指定账号的有效期限，缺省表示永久有效。
   >
   >    -f指定在密码过期后多少天即关闭该账号。-p表示创建密码
   >
   > 2. u 用户号 指定用户的用户号；因为系统用户的用户号为0，故指定用户号为0 如果同时有-o选项，则可以重复使用其他用户的标识号；因为系统本身存在用户号为0的系统用户，故应该使用该参数。

3. 将变量count值赋值为1

   > 1. DECLARE @count表示选定变量，SELECT @count＝1表示为count赋值；这里的赋值语句还可以使用SET @count＝1；但是select和set在赋值语句中有些区别：SELECT可以在一条语句里对多个变量同时赋值,而SET只能一次对一个变量赋值，即如果数据表中存在多个count变量，则不能使用SET赋值；
   >
   > 2. ```sql
   >    DECLARE @count 
   >    SELECT @count=1
   >    ```

4. 分类的IP地址由：网络号+主机号组成，主要分为A、B、C、D、E五类，我们能使用的只有A~C类，D类为多播地址，E类保留使用。主机号全为0的时候，表示一个网段

   主机号全为1的时候，是一个指向网络的广播。关于广播的具体分类请看TCP/IP卷一的第12章。 

5. ICMP是网络层协议

   > 1. ICMP协议典型用途是差错报告
   > 2. ping程序实际上向目标主机发送了一个ICMP类型8编码0的报文
   > 3. 当某IP分组TTL为零时，路由器将丢弃改分组并发送一个ICMP报告给源主机

6. 属性A是关系R的主属性，则属性A不能取空值（NULL），这是实体完整性

   > 1) 实体完整性：规定表的每一行在表中是惟一的实体。
   >
   > 2) 域完整性：是指表中的列必须满足某种特定的数据类型约束，其中约束又包括取值范围、精度等规定。
   >
   > 3) 参照完整性：是指两个表的主关键字和外关键字的数据应一致，保证了表之间的数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散。
   >
   > 4) 用户定义的完整性：不同的关系数据库系统根据其应用环境的不同，往往还需要一些特殊的约束条件。用户定义的完整性即是针对某个特定关系数据库的约束条件，它反映某一具体应用必须满足的语义要求。

7. 在网络7层协议中，如果想使用UDP协议达到TCP协议的效果,可以在会话层做文章。

   > OSI中的应用层仅仅是对应用程序经常要用到的功能、以及对实现这些功能要用到的协议进行描述。 
   >
   > 表示层解决用户信息的语法表示
   >
   > 会话层对数据传输进行管理 

8. MYSQL的删除列ALTER TANLE table name drop column_name;添加列：ALTER TABLE table_name ADD column_name datatype

9. BTREE索引和HASH索引的差异：  

   >（1）HASH索引只用于使用    =    或    <=>    操作符的等式比较。如果一定要使用范围查询    的话，只能使用BTREE索引。
   >
   >（2）优化器不能使用    Hash    索引来加速    order by    操作。
   >
   >（3）使用    Hash    索引时    MySQL    不能确定在两个值之间大约有多少行。如果将一个MyISAM表改为的Hash索引memory表，会影响一些查询的执行效率。   
   >
   >（4）Hash索引只能使用整个关键字来搜索一行。 

10. 语法分析器可以发现源程序中的语法错误。

11. > 一个实体转换为一个关系模式
   >
   > 二元关系的转换
   >
   > (1)若实体间联系是1:1，可以在两个实体类型转换成的两个关系模式中任意一个关系模式的属性中加入另一个关系模式的键和联系类型的属性。
   >
   > (2)若实体间联系是1:N，则在N端实体类型转换成的关系模式中加入1端实体类型的键和联系类型的属性。
   >
   > (3)若实体间联系是M:N，则将联系类型也转换成关系模式，其属性为两端实体类型的键加上联系类型的属性，而键为两端实体键的组合。

12. > **词法分析（Lexical analysis或Scanning）和词法分析程序（Lexical analyzer或Scanner） **
   > 　　词法分析阶段是编译过程的第一个阶段。这个阶段的任务是从左到右一个字符一个字符地读入源程序，即对构成源程序的字符流进行扫描然后根据构词规则识别单词(也称单词符号或符号)。词法分析程序实现这个任务。词法分析程序可以使用lex等工具自动生成。
   >
   > **语法分析（Syntax analysis或Parsing）和语法分析程序（Parser）** 
   > 　　语法分析是编译过程的一个逻辑阶段。语法分析的任务是在词法分析的基础上将单词序列组合成各类语法短语，如“程序”，“语句”，“表达式”等等.语法分析程序判断源程序在结构上是否正确.源程序的结构由上下文无关文法描述.
   >
   > **语义分析（Syntax analysis）** 
   > 　　语义分析是编译过程的一个逻辑阶段. 语义分析的任务是对结构上正确的源程序进行上下文有关性质的审查, 进行类型审查.例如一个C程序片断:
   > 　　int arr[2],b;
   > 　　b = arr*10; 
   > 　　源程序的结构是正确的. 
   > ​　　语义分析将审查类型并报告错误:不能在表达式中使用一个数组变量,赋值语句的右端和左端的类型不匹配.      

13. IP地址分类

    > IP地址分为五类，A类保留给政府机构，B类分配给中等规模的公司，C类分配给任何需要的人，D类用于组播，E类用于实验，各类可容纳的地址数目不同。  
    >
    > A、B、C三类IP地址的特征：当将IP地址写成二进制形式时，A类地址的第一位总是0，B类地址的前两位总是10，C类地址的前三位总是110。   
    >
    > 1. A类地址  （1）A类地址第1字节为网络地址，其它3个字节为主机地址。  （2）A类地址范围：1.0.0.1—126.255.255.254  （3）A类地址中的私有地址和保留地址：  ① 10.X.X.X是私有地址（所谓的私有地址就是在互联网上不使用，而被用在局域网络中的地址）。  范围（10.0.0.0-10.255.255.255）  ② 127.X.X.X是保留地址，用做循环测试用的。  
    > 2. B类地址  （1） B类地址第1字节和第2字节为网络地址，其它2个字节为主机地址。  （2） B类地址范围：128.0.0.1—191.255.255.254。  （3） B类地址的私有地址和保留地址  ① 172.16.0.0—172.31.255.255是私有地址  ② 169.254.X.X是保留地址。如果你的IP地址是自动获取IP地址，而你在网络上又没有找到可用的DHCP服务器。就会得到其中一个IP。   
    > 3. C类地址  （1）C类地址第1字节、第2字节和第3个字节为网络地址，第4个个字节为主机地址。另外第1个字节的前三位固定为110。  （2）C类地址范围：192.0.0.1—223.255.255.254。  （3） C类地址中的私有地址：  192.168.X.X是私有地址。(192.168.0.0-192.168.255.255)  
    > 4. D类地址  （1） D类地址不分网络地址和主机地址，它的第1个字节的前四位固定为1110。  （2） D类地址范围：224.0.0.1—239.255.255.254  
    > 5. E类地址  （1） E类地址不分网络地址和主机地址，它的第1个字节的前五位固定为11110。  （2） E类地址范围：240.0.0.1—255.255.255.254

14. 伙伴算法（Buddy）

    > - 优缺点
    >   1. 一个很小的块往往会阻碍一个大块的合并。
    >   2. 伙伴算法是按2的幂次方大小进行分配内存块，即为了避免把大的内存块拆的太碎，更重要的是使分配和释放过程迅速。但是也带来了不利的一面，如果所需内存大小不是2的幂次方，就会有部分页面浪费。
    >   3. 另外拆分和合并涉及到较多的链表和位图操作，开销比较大。
    > - 定义：满足一下条件的称为伙伴
    >   1. 两个块大小相同
    >   2. 两个块地址连续
    >   3. 两个块必须是同一个大块分离出来的。

15. SQL中删除触发器用DROP

16. > 数据库范式也分为1NF，2NF，3NF，BCNF，4NF，5NF。一般在我们设计关系型数据库的时候，最多考虑到BCNF就够。符合高一级范式的设计，必定符合低一级范式，例如符合2NF的关系模式，必定符合1NF。
   >
   > 第一范式：符合1NF的关系中的每个属性都不可再分； 
   >
   > 第二范式：2NF在1NF的基础之上，消除了非主属性对于码的部分函数依赖；
   >
   > 第三范式：3NF在2NF的基础之上，消除了非主属性对于码的传递函数依赖；
   >
   > BCNF：在 3NF 的基础上消除  主属性  对于码的部分与传递函数依赖。
   >
   > [相关链接](https://www.zhihu.com/question/24696366).

17. > 1. 线程上下文切换和进程上下问切换一个最主要的区别
   >
   >    线程的切换虚拟内存空间依然是相同的，但是进程切换是不同的。这两种上下文切换的处理都是通过操作系统内核来完成的。内核的这种切换过程伴随的最显著的性能损耗是将寄存器中的内容切换出。 
   >
   >    另外一个隐藏的损耗是上下文的切换会扰乱处理器的缓存机制。
   >
   >    简单的说，一旦去切换上下文，处理器中所有已经缓存的内存地址一瞬间都作废了。还有一个显著的区别是当你改变虚拟内存空间的时候，处理的页表缓冲（processor’s Translation Lookaside Buffer(TLB)）或者相当的神马东西会被全部刷新，这将导致内存的访问在一段时间内相当的低效。但是在线程的切换中，不会出现这个问题。
   >
   > 2. ​    进程间切换的步骤：   
   >
   >    ​    1，保存程序计数其以及其他寄存器。   
   >
   >    ​    2， 更新当前处于“运行态”的进程的进程控制块，把进程状态改为相应状态，更新其他相关域   
   >
   >    ​    3， 把被切换进程的进程控制块移到相关状态的队列   
   >
   >    ​    4， 选择另外一个进程开始执行，把该进程进程控制块的状态改为“运行态”   
   >
   >    ​    5， 恢复被选择进程的处理器在最近一次被切换出运行态时的上下文，比如载入程序计数器以及其他处理器的值   
   >
   >    ​    进程间切换伴随着两次模式切换（用户--内核，内核--用户）。   
   >
   >    ​    （同一进程内）线程间切换的步骤：   
   >
   >    ​    线程分两种，用户级线程和内核级线程   
   >
   >    ​    在用户级线程中，有关线程管理的所有工作都由应用程序完成，内核没有意识到线程的存在。   
   >
   >    ​    （同一进程内）用户级线程间切换时，只需要保存用户寄存器的内容，程序计数器，栈指针，不需要模式切换。   
   >
   >    ​    缺点：   
   >
   >    ​    1， 在进程的某个线程执行系统调用时，不仅该线程被阻塞，该线程所在进程的所有线程都被阻塞   
   >
   >    ​    2， 无法利用多处理器   
   >
   >    ​    在内核级线程中，有关线程的管理工作都是由内核完成的，应用程序部分没有线程管理的权限，只有一个接口（API)   
   >
   >    ​    （同一进程内）内核级线程间切换时，除了保存上下文，还要进行模式切换。   
   >
   >    ​    优点：   
   >
   >    ​    1， 可以利用多处理器   
   >
   >    ​    2， 线程阻塞不会导致进程阻塞   

18. 结构体的内存分配

    > 1、 结构体的大小等于结构体内最大成员大小的整数倍
    > 2、 结构体内的成员的首地址相对于结构体首地址的偏移量是其类型大小的整数倍，比如说double型成员相	对于结构体的首地址的地址偏移量应该是8的倍数。
    >
    > 3、  为了满足规则1和2编译器会在结构体成员之后进行字节填充！

19. 抖动

    > 当需要执行否条的指令或使用某个数据而发现他们不再内存中时候，会产生缺页异常。
    >
    > 系统从磁盘中把此指令或数据所在的页面装入。缺页异常是由硬件所产生的一种特殊终端信号，其中当中断率较高时，整个系统的页面调度非常频繁造成大部分时间都花费在来回调度上，而不是执行任务，这种现象叫做“抖动”。——《操作系统》  

20. > **成员方法又称为实例方法**
   >
   > **静态方法又称为类方法**
   >
   >  其次： 
   >
   >   a. 静态方法中没有this指针;
   >
   >   c. 可以通过类名作用域的方式调用Class::fun();
   >
   >   d. 太绝对化了，在类中申请一个类对象或者参数传递一个对象或者指针都可以调用;

21. 帧中继网是一种广域网

22. 虚函数不可以重载为内联

23. dpkg 是Debian package的简写，为”Debian“ 操作系统专门开发的套件管理系统，用于软件的安装，更新和移除。

   所有源自"Debian"的Linux的发行版都使用 dpkg,   例如"Ubuntu"，安装文件名后缀.deb

24. 基数排序：将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后, 数列就变成一个有序序列。可以同时操作多个元素，从而实现了并行处理。

25. > 1. 目标程序是 编译系统生成的，解释系统不生成目标程序。 
   >
   >    编译： 源代码->目标代码 
   >
   >    解释：源代码->中间代码->目标代码 
   >
   >    目标代码是机器可直接执行的代码 
   >
   >    不管编译还是解释,都需要转为机器识别的才能执行, 只不过解释是靠虚拟机或者其他机制 
   >
   > 2. A: 计算机不能直接理解任何除及其语言以外的语言，所以必须要把程序员所写的程序语言翻译成机器语言，计算机才能执行程序。将其他语言翻译成机器语言的工具，被称为编译器。
   >      编译器翻译的方式有两种：一个是编译，一个是解释，相对应的是编译型语言和解释型语言。
   >
   >    B：编译语言程序执行分为编译、执行两个阶段
   >
   >    C：编译语言如JAVA是跨平台语言，编译一次可以在别的系统中不需再次编译直接执行
   >    D：编译语言首先将源码编译成字节码或者编译成二进制，C就是把源码编译成二进制码，Java编译成字节码。编译语言执行的效率往往比较高。因为它会对编译好的代码直接执行，而编译好的代码已经接近机器语言，无需再去做解释的工作。解释性语言不同，在执行的时候才把源代码调到执行它的地方，比如是引擎或者解释器，调用一句执行一句。

26. > 一个算法应该具有以下五个重要的特征：  　　
   >
   > 1、有穷性： 一个算法必须保证执行有限步之后结束；  　　
   >
   > 2、确切性：算法的每一步骤必须有确切的定义；  　　
   >
   > 3、输入：一个算法有0个或多个输入，以刻画运算对象的初始情况，所谓0个输入是指算法本身定除了初始条件；
   > 4、输出：一个算法有一个或多个输出，以反映对输入数据加工后的结果。没有输出的算法是毫无意义的；  5、可行性： 算法原则上能够精确地运行，而且人们用笔和纸做有限次运算后即可完成。

27. 以太网提供的服务是不可靠的交付，即尽最大努力的交付。当目的站收到有差错的数据帧时就丢弃此帧，其他什么也不做。差错的纠正由高层来决定。如果高层发现丢失了一些数据而进行重传，以太网并不知道这是一个重传的帧。

28. 用来记录对数据库中数据进行的每一次更新操作是日志文件

29.   计算机内的传输是并行传输，而通信线路上的传输是串行传输。

30. 网络管理应具有五大管理功能：配置管理、性能管理、故障管理、安全管理和计费管理

31. 用哈希（散列）方法处理冲突（碰撞）时可能出现堆积（聚集）现象，下列选项中，会受堆积现象直接影响的是平均查找长度

32. 哈夫曼树有左右子树之分，哈夫曼树是最优二叉树

33. ```c++
   int *p1 = new int[10];
   int *p2 = new int[10]();
   /*
   	p1申请的空间里的值是随机值，p2申请的空间里的值已经初始化
   */
   ```

34. ROW_NUMBER()函数将针对SELECT语句返回的每一行，从1开始编号，赋予其连续的编号。在查询时应用了一个排序标准后，只有通过编号才能够保证其顺序是一致的，当使用ROW_NUMBER函数时，也需要专门一列用于预先排序以便于进行编号

35. [c++面试总结转载](http://blog.csdn.net/hmxz2nn/article/details/53157155)

36. [默认构造函数](http://www.cnblogs.com/QG-whz/p/4676481.html).

